{"version":3,"file":"static/js/687.41b5acde.chunk.js","mappings":"2KA+BA,IA3BmB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACZC,EAAOD,EAAPC,GACFC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,iBAAKC,UAAU,mHAAf,WAEE,gBACEC,IAAG,UAAKC,EAAAA,GAAAA,SAAiBN,EAAKO,gBAC9BH,UAAU,8CAEZ,iBAAKA,UAAU,uCAAf,WACE,eAAIA,UAAU,8BAAd,SAA6CJ,EAAKQ,SAClD,iBAAKJ,UAAU,yEAAf,WACE,4BAAO,IAAIK,KAAKT,EAAKU,cAAcC,cAAnC,QACA,0BAAOX,EAAKY,mBAEd,UAAC,IAAD,CAAQC,QAAS,kBAAMX,EAAS,WAAD,OAAYD,KAAOa,MAAM,EAAxD,UACG,IADH,yB,gHCYV,EA5BsB,WACpB,IAAQC,GAAaC,EAAAA,EAAAA,MAAbD,SACAE,GAASC,EAAAA,EAAAA,IAAOZ,EAAAA,GAAAA,cAAsBS,EAAU,WAAYI,EAAAA,IAA5DF,KACR,GAAKA,EAAL,CACA,IACMG,EADWH,EAATI,KACWC,MAAM,EAAG,GAC5B,OAAKF,GAASA,EAAMG,QAAU,EAAU,MAEtC,gBAAKnB,UAAU,uDAAf,SACGgB,EAAMG,OAAS,GACdH,EAAMI,KAAI,SAACxB,GACT,OACE,iBAAmBI,UAAU,QAA7B,WACE,gBACEA,UAAU,wCACVC,IAAG,6CAAwCL,EAAKyB,cAChDC,IAAI,MAEN,iBAAMtB,UAAU,yBAAhB,SACGJ,EAAK2B,kBAPA3B,EAAKC,WCmB3B,EA/BoB,WAClB,IAAQc,GAAaC,EAAAA,EAAAA,MAAbD,SACAE,GAASC,EAAAA,EAAAA,IAAOZ,EAAAA,GAAAA,cAAsBS,EAAU,UAAWI,EAAAA,IAA3DF,KACR,GAAKA,EAAL,CACA,IAAQW,EAAYX,EAAZW,QAER,OACE,4BACE,eAAIxB,UAAU,gCAAd,qBACCwB,EAAQN,MAAM,EAAG,GAAGE,KAAI,SAACxB,GACxB,OACE,gBAEEI,UAAU,8DAFZ,UAIE,mBACEyB,MAAM,MACNC,OAAO,MACPzB,IAAG,wCAAmCL,EAAK+B,KAC3CvB,MAAM,uBACNwB,YAAY,IACZC,MAAM,2FACNC,iBAAe,KAVZlC,EAAKC,Y,kBCgBtB,EA1BsB,WACpB,IAAQc,GAAaC,EAAAA,EAAAA,MAAbD,SACAE,GAASC,EAAAA,EAAAA,IAAOZ,EAAAA,GAAAA,cAAsBS,EAAU,WAAYI,EAAAA,IAA5DF,KACR,IAAKA,EAAM,OAAO,KAClB,IAAQW,EAAYX,EAAZW,QACR,OAAKA,GAAWA,EAAQL,QAAU,EAAU,MAC5CY,QAAQC,IAAIR,IAEV,iCACE,eAAIxB,UAAU,oBAAd,6BACA,gBAAKA,UAAU,aAAf,UACE,SAAC,KAAD,CAAQiC,YAAY,EAAMC,aAAc,GAAIC,cAAc,OAA1D,SACGX,EAAQL,OAAS,GAChBK,EAAQJ,KAAI,SAACgB,GACX,OACE,SAAC,KAAD,WACE,SAACC,EAAA,EAAD,CAAYzC,KAAMwC,KADFA,EAAMvC,gBCoCxC,EAnD0B,WACxB,IAAQc,GAAaC,EAAAA,EAAAA,MAAbD,SACAE,GAASC,EAAAA,EAAAA,IAAOZ,EAAAA,GAAAA,iBAAyBS,GAAWI,EAAAA,IAApDF,KACR,IAAKA,EAAM,OAAO,KAClB,IAAQV,EAAwDU,EAAxDV,cAAemC,EAAyCzB,EAAzCyB,YAAalC,EAA4BS,EAA5BT,MAAOmC,EAAqB1B,EAArB0B,SAAUC,EAAW3B,EAAX2B,OAErD,OACE,iBAAKxC,UAAU,QAAf,WACE,iBAAKA,UAAU,4BAAf,WACE,gBAAKA,UAAU,qDACf,gBACEA,UAAU,sCACVyC,MAAO,CACLC,gBAAgB,OAAD,OAASxC,EAAAA,GAAAA,cAAsBC,GAA/B,YAIrB,gBAAKH,UAAU,mDAAf,UACE,gBACEA,UAAU,8BACVC,IAAG,UAAKC,EAAAA,GAAAA,cAAsBoC,IAC9BhB,IAAI,QAGR,gBAAKtB,UAAU,+CAAf,UACE,eAAIA,UAAU,sCAAd,SAAqDI,OAEvD,gBAAKJ,UAAU,+CAAf,SACGwC,EAAOrB,OAAS,GACfqB,EAAOpB,KAAI,SAACxB,GACV,OACE,kBAAMI,UAAU,8BAAhB,UACG,IACAJ,EAAK+C,OAF2C/C,EAAKC,UAOhE,gBAAKG,UAAU,iEAAf,UACE,uBAAIuC,OAEN,gBAAKvC,UAAU,kDAAf,UACE,eAAIA,UAAU,cAAd,sBAEF,SAAC,EAAD,KACA,SAAC,EAAD,KACA,SAAC,EAAD","sources":["Components/Movies/MoviesCart.js","Components/Pages/MoviesCridits.js","Components/Pages/MoviesVideo.js","Components/Pages/MoviesSimilar.js","Components/Pages/MoviesDetailsPage.js"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { tmdbApi } from \"../../config/config\";\r\nimport Button from \"../Button/Button\";\r\nconst MoviesCart = ({ item }) => {\r\n  const { id } = item;\r\n  const Navigate = useNavigate();\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-col justify-between cart p-3 bg-slate-800 rounded-lg relative z-10 h-[100%] select-none cursor-pointer\">\r\n        {/*  eslint-disable-next-line jsx-a11y/alt-text */}\r\n        <img\r\n          src={`${tmdbApi.Image500(item.backdrop_path)}`}\r\n          className=\"w-full h-[250px] rounded-lg object-cover\"\r\n        />\r\n        <div className=\"flex flex-col flex-1 justify-between\">\r\n          <h4 className=\"mt-4 font-bold8 font-medium\">{item.title}</h4>\r\n          <div className=\"flex items-center justify-between mb-5 mt-5 text-slate-500 text-[15px]\">\r\n            <span>{new Date(item.release_date).getFullYear()} </span>\r\n            <span>{item.vote_average}</span>\r\n          </div>\r\n          <Button onClick={() => Navigate(`/movies/${id}`)} full={true}>\r\n            {\" \"}\r\n            Watch Now\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviesCart;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useSWR from \"swr\";\r\nimport { ApiKey, fetcher, tmdbApi } from \"../../config/config\";\r\n\r\nconst MoviesCridits = () => {\r\n  const { moviesId } = useParams();\r\n  const { data } = useSWR(tmdbApi.GetMoviesMeta(moviesId, \"credits\"), fetcher);\r\n  if (!data) return;\r\n  const { cast } = data;\r\n  const casts = cast.slice(0, 8);\r\n  if (!casts || casts.length <= 0) return null;\r\n  return (\r\n    <div className=\"mt-10 mb-10 w-[800px] mx-auto grid grid-cols-4 gap-4\">\r\n      {casts.length > 0 &&\r\n        casts.map((item) => {\r\n          return (\r\n            <div key={item.id} className=\"pt-10\">\r\n              <img\r\n                className=\"rounded-lg w-full h-full object-cover\"\r\n                src={`https://image.tmdb.org/t/p/original${item.profile_path}`}\r\n                alt=\"\"\r\n              />\r\n              <span className=\"text-center block mt-5\">\r\n                {item.original_name}\r\n              </span>\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviesCridits;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useSWR from \"swr\";\r\nimport { ApiKey, fetcher, tmdbApi } from \"../../config/config\";\r\n\r\nconst MoviesVideo = () => {\r\n  const { moviesId } = useParams();\r\n  const { data } = useSWR(tmdbApi.GetMoviesMeta(moviesId, \"videos\"), fetcher);\r\n  if (!data) return;\r\n  const { results } = data;\r\n  //   if (!results || results.length <= 0) return null;\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center mt-20 text-[40px]\">Trailer</h1>\r\n      {results.slice(0, 1).map((item) => {\r\n        return (\r\n          <div\r\n            key={item.id}\r\n            className=\"grid grid-cols-4 gap-4 mt-10 w-[800px] mx-auto aspect-video\"\r\n          >\r\n            <iframe\r\n              width=\"800\"\r\n              height=\"315\"\r\n              src={`https://www.youtube.com/embed/${item.key}`}\r\n              title=\"YouTube video player\"\r\n              frameBorder=\"0\"\r\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n              allowFullScreen\r\n            ></iframe>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n// <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/OB3g37GTALc\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\nexport default MoviesVideo;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport useSWR from \"swr\";\r\nimport { ApiKey, fetcher, tmdbApi } from \"../../config/config\";\r\nimport MoviesCart from \"../Movies/MoviesCart\";\r\n\r\nconst MoviesSimilar = () => {\r\n  const { moviesId } = useParams();\r\n  const { data } = useSWR(tmdbApi.GetMoviesMeta(moviesId, \"similar\"), fetcher);\r\n  if (!data) return null;\r\n  const { results } = data;\r\n  if (!results || results.length <= 0) return null;\r\n  console.log(results);\r\n  return (\r\n    <>\r\n      <h3 className=\"text-[30px] my-10\">Similar Movies</h3>\r\n      <div className=\"movie-list\">\r\n        <Swiper grabCursor={true} spaceBetween={40} slidesPerView=\"auto\">\r\n          {results.length > 0 &&\r\n            results.map((movie) => {\r\n              return (\r\n                <SwiperSlide key={movie.id}>\r\n                  <MoviesCart item={movie} />\r\n                </SwiperSlide>\r\n              );\r\n            })}\r\n        </Swiper>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviesSimilar;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useSWR from \"swr\";\r\nimport { fetcher, tmdbApi } from \"../../config/config\";\r\nimport MoviesCridits from \"./MoviesCridits\";\r\nimport MoviesVideo from \"./MoviesVideo\";\r\nimport MoviesSimilar from \"./MoviesSimilar\";\r\nconst MoviesDetailsPage = () => {\r\n  const { moviesId } = useParams();\r\n  const { data } = useSWR(tmdbApi.GetMoviesDetails(moviesId), fetcher);\r\n  if (!data) return null;\r\n  const { backdrop_path, poster_path, title, overview, genres } = data;\r\n\r\n  return (\r\n    <div className=\"py-20\">\r\n      <div className=\"w-full h-[800px] relative\">\r\n        <div className=\"overlay absolute inset-0 bg-black bg-opacity-70\"></div>\r\n        <div\r\n          className=\"w-fill h-full bg-cover bg-no-repeat\"\r\n          style={{\r\n            backgroundImage: `url(${tmdbApi.ImageOriginal(backdrop_path)})`,\r\n          }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"w-[800px] h-[400px] mx-auto -mt-[200px] relative\">\r\n        <img\r\n          className=\"w-full h-full  object-cover\"\r\n          src={`${tmdbApi.ImageOriginal(poster_path)}`}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div className=\"pt-10 pb-10 flex items-center justify-center\">\r\n        <h3 className=\"text-white font-medium text-[20px] \">{title}</h3>\r\n      </div>\r\n      <div className=\"mb-10 flex items-center justify-center gap-5\">\r\n        {genres.length > 0 &&\r\n          genres.map((item) => {\r\n            return (\r\n              <span className=\"py-2 px-4 border rounded-lg\" key={item.id}>\r\n                {\" \"}\r\n                {item.name}\r\n              </span>\r\n            );\r\n          })}\r\n      </div>\r\n      <div className=\"w-[800px] mx-auto text-center flex items-center justify-center\">\r\n        <p>{overview}</p>\r\n      </div>\r\n      <div className=\"flex flex-col justify-center items-center mt-20\">\r\n        <h3 className=\"text-[40px]\">Casts</h3>\r\n      </div>\r\n      <MoviesCridits />\r\n      <MoviesVideo />\r\n      <MoviesSimilar />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviesDetailsPage;\r\n"],"names":["item","id","Navigate","useNavigate","className","src","tmdbApi","backdrop_path","title","Date","release_date","getFullYear","vote_average","onClick","full","moviesId","useParams","data","useSWR","fetcher","casts","cast","slice","length","map","profile_path","alt","original_name","results","width","height","key","frameBorder","allow","allowFullScreen","console","log","grabCursor","spaceBetween","slidesPerView","movie","MoviesCart","poster_path","overview","genres","style","backgroundImage","name"],"sourceRoot":""}